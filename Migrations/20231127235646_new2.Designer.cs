// <auto-generated />
using System;
using LectureAttendance.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LectureAttendance.Migrations
{
    [DbContext(typeof(PContext))]
    [Migration("20231127235646_new2")]
    partial class new2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LectureAttendance.Models.Course", b =>
                {
                    b.Property<string>("CId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("LectureAttendance.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoursesCId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnrollmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instrcutor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesCId");

                    b.HasIndex("StudentsId");

                    b.ToTable("enrollments");
                });

            modelBuilder.Entity("LectureAttendance.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("LectureAttendance.Models.InstructorStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("InstructorsId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructorsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("instructorsStudents");
                });

            modelBuilder.Entity("LectureAttendance.Models.Lecture", b =>
                {
                    b.Property<int>("LId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LId"));

                    b.Property<string>("CoursesCId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateOfLecture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstructorsId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LId");

                    b.HasIndex("CoursesCId");

                    b.HasIndex("InstructorsId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("LectureAttendance.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("LectureAttendance.Models.Enrollment", b =>
                {
                    b.HasOne("LectureAttendance.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("CoursesCId");

                    b.HasOne("LectureAttendance.Models.Student", "Students")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentsId");

                    b.Navigation("Courses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LectureAttendance.Models.InstructorStudent", b =>
                {
                    b.HasOne("LectureAttendance.Models.Instructor", "Instructors")
                        .WithMany("InstructorStudents")
                        .HasForeignKey("InstructorsId");

                    b.HasOne("LectureAttendance.Models.Student", "Students")
                        .WithMany("InstructorStudents")
                        .HasForeignKey("StudentsId");

                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LectureAttendance.Models.Lecture", b =>
                {
                    b.HasOne("LectureAttendance.Models.Course", "Courses")
                        .WithMany()
                        .HasForeignKey("CoursesCId");

                    b.HasOne("LectureAttendance.Models.Instructor", "Instructors")
                        .WithMany("Lectures")
                        .HasForeignKey("InstructorsId");

                    b.Navigation("Courses");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("LectureAttendance.Models.Instructor", b =>
                {
                    b.Navigation("InstructorStudents");

                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("LectureAttendance.Models.Student", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("InstructorStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
